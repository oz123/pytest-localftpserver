[tox]
minversion = 3.4.0
envlist = py{38,39,310,311}, custom_config, flake8, docs, docs-links


[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311


[flake8]
max-line-length = 99


[testenv:docs]
whitelist_externals = make
commands =
    make --directory=docs clean_all html

[testenv:docs-links]
whitelist_externals = make
commands =
    make --directory=docs clean_all linkcheck


[testenv:flake8]
basepython=python
deps=flake8
commands=flake8 pytest_localftpserver tests


[testenv:custom_config]
setenv =
    FTP_USER = benz
    FTP_PASS = erni1
    FTP_HOME = {envtmpdir}
    FTP_HOME_TLS = {envtmpdir}
    FTP_PORT = 31175
    FTP_PORT_TLS = 31176
    FTP_FIXTURE_SCOPE = function
    FTP_CERTFILE = {toxinidir}/tests/test_keycert.pem
commands_pre =
    {envpython} -m pip install -U -q -r {toxinidir}/requirements_dev.txt
commands =
    {env:COMMAND:coverage} erase
    {env:COMMAND:coverage} run --append -m pytest --basetemp={envtmpdir} tests/test_pytest_localftpserver_with_env_var.py
    {env:COMMAND:coverage} report --show-missing


[testenv]
passenv = *
deps = -r{toxinidir}/requirements_dev.txt
commands_pre =
    {envpython} -m pip install -U -q cryptography --only-binary=:all:
    {envpython} -m pip install -U -q -r {toxinidir}/requirements_dev.txt
commands =
    {env:COMMAND:coverage} erase
    {env:COMMAND:coverage} run --append -m pytest --basetemp={envtmpdir} tests/test_pytest_localftpserver.py tests/test_helper_functions.py tests/test_pytest_localftpserver_TLS.py
    {env:COMMAND:coverage} report --show-missing
